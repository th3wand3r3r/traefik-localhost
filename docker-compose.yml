version: '3.2'

services:

  # Load Balancer, reduces the exposed Host ports
  traefik:
    image: traefik:v2.5
    container_name: traefik
    ports:
      - 80:80
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/traefik_dynamic.yml:/traefik_dynamic.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - proxy

  # A Web GUI for docker
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    volumes:
      - portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`p.localhost`)
      traefik.http.routers.portainer.entrypoints: web
      traefik.http.routers.portainer.service: portainer
      traefik.http.services.portainer.loadbalancer.server.port: 9000
    restart: unless-stopped
    networks:
      - proxy

  # Tracing
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    labels:
      traefik.enable: true
      traefik.http.routers.jaeger.rule: Host(`j.localhost`)
      traefik.http.routers.jaeger.entrypoints: web
      traefik.http.routers.jaeger.service: jaeger
      traefik.http.services.jaeger.loadbalancer.server.port: 16686
    restart: unless-stopped
    networks:
      - proxy

  # Monitoring
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    labels:
      traefik.enable: true
      traefik.http.routers.prometheus.rule: Host(`pr.localhost`)
      traefik.http.routers.prometheus.entrypoints: web
      traefik.http.routers.prometheus.service: prometheus
      traefik.http.services.prometheus.loadbalancer.server.port: 9090
    restart: unless-stopped
    networks:
      - proxy

  # Stats Dashboard
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring
    labels:
      traefik.enable: true
      traefik.http.routers.grafana.rule: Host(`gr.localhost`)
      traefik.http.routers.grafana.entrypoints: web
      traefik.http.routers.grafana.service: grafana
      traefik.http.services.grafana.loadbalancer.server.port: 3000
    restart: unless-stopped
    networks:
      - proxy

volumes:
  portainer:
    driver: local
  prometheus:
    driver: local
  grafana:
    driver: local

networks:
  proxy:
    external: true
